 set nocompatible              " be iMproved, required
 filetype off                  " required

 " set the runtime path to include Vundle and initialize
 set rtp+=~/.vim/bundle/Vundle.vim
 call vundle#begin()
 " " alternatively, pass a path where Vundle should install plugins
 " "call vundle#begin('~/some/path/here')
 "
 " " let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'davidhalter/jedi-vim'
Plugin 'tpope/vim-fugitive'
 "
 " " The following are examples of different formats supported.
 " " Keep Plugin commands between vundle#begin/end.
 " " plugin on GitHub repo
 " Plugin 'tpope/vim-fugitive'
 " " plugin from http://vim-scripts.org/vim/scripts.html
 " " Plugin 'L9'
 " " Git plugin not hosted on GitHub
 " Plugin 'git://git.wincent.com/command-t.git'
 " " git repos on your local machine (i.e. when working on your own plugin)
 " Plugin 'file:///home/gmarik/path/to/plugin'
 " " The sparkup vim script is in a subdirectory of this repo called vim.
 " " Pass the path to set the runtimepath properly.
 " Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
 " " Install L9 and avoid a Naming conflict if you've already installed a
 " " different version somewhere else.
 " " Plugin 'ascenator/L9', {'name': 'newL9'}
 "
 " " All of your Plugins must be added before the following line
  call vundle#end()            " required
  filetype plugin indent on    " required
 " " To ignore plugin indent changes, instead use:
 " "filetype plugin on
 " "
 " " Brief help
 " " :PluginList       - lists configured plugins
 " " :PluginInstall    - installs plugins; append `!` to update or just
 " :PluginUpdate
 " " :PluginSearch foo - searches for foo; append `!` to refresh local cache
 " " :PluginClean      - confirms removal of unused plugins; append `!` to
 " auto-approve removal
 " "
 " " see :h vundle for more details or wiki for FAQ
 " " Put your non-Plugin stuff after this line
 "
 set relativenumber
 set number
 set autoindent
" nnoremap <C-J> <C-W><C-J>
" nnoremap <C-K> <C-W><C-K>
" nnoremap <C-L> <C-W><C-L>
" nnoremap <C-H> <C-W><C-H>
" " Enable folding
" set foldmethod=indent
" set foldlevel=99
" " Enable folding with the spacebar
" nnoremap <space> za
" nnoremap <space> zl
" nnoremap <space> zp
"
" Plugin 'tmhedberg/SimpylFold'
" Plugin 'lervag/vimtex'
" Plugin 'vim-scripts/indentpython.vim'
" Bundle 'Valloric/YouCompleteMe'
set nrformats-=octal
" let g:vimtex_compiler_latexmk = {'callback' : 0}
" if has("autocmd")
"   au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe
"normal! g`\"" | endif
"endif
""map <f3> :w <CR> :!pdflatex %<CR> :redraw! <CR>

"map zl :w <CR> :! pdflatex %<CR> 
"
"autocmd filetype tex nnoremap <F2> :w <bar> exec '!pdflatex
"'.shellescape('%')<CR> 
"map cr :echo @% <CR> 
""autocmd filetype py map <f2> :w\|!./%<CR>
autocmd Filetype python nnoremap  <F2> :w <bar> :exec '!python' shellescape(@%, 1)<cr>
autocmd Filetype sh nnoremap  <F2> :w <bar> :exec '!bash' shellescape(@%, 1)<cr>
autocmd Filetype tcl nnoremap  <F2> :w <bar> :exec '!vmd -dispdev text -e ' shellescape(@%, 1)<cr>
map  cf :set norelativenumber <cr> :set nonumber <cr>
map cr :echo @% <CR>
autocmd Filetype python setlocal tabstop=4
autocmd Filetype bash setlocal tabstop=4
autocmd Filetype tcl setlocal tabstop=4

setlocal tabstop=4
set shiftwidth=4
set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab
set undofile " Maintain undo history between sessions
set undodir=/mnt/home/mastore/.vim/undodir
colorscheme murphy
nnoremap <expr> j v:count ? (v:count > 2 ? "m'" . v:count : '') . 'j' : 'gj'
nnoremap <expr> k v:count ? (v:count > 2 ? "m'" . v:count : '') . 'k' : 'gk'
set undofile " Maintain undo history between sessions
set viminfo+=<20000    " or whatever number you want
let g:jedi#popup_on_dot = 0
setlocal omnifunc=jedi#completions
" Fugitive Conflict Resolution
 "nnoremap <leader>gd :Gvdiff<CR>
 "nnoremap gdh :diffget //2<CR>
 "nnoremap gdl :diffget //3<CR>
